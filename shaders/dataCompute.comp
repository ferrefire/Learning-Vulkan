#version 450

#extension GL_ARB_shading_language_include : require

struct GeneralData
{
	float viewHeight;
};

struct HeightData
{
	vec4 position;
};

layout(std430, set = 1, binding = 0) buffer Data
{
	GeneralData generalData;
};

layout(std430, set = 1, binding = 1) buffer HeightBuffer
{
	HeightData heightData[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

#include "variables.glsl"
#include "heightmap.glsl"

void main()
{
    if (gl_GlobalInvocationID.x == 0)
	{
		generalData.viewHeight = GetTerrainHeight(variables.viewPosition.xz);
		return;
	}

	int index = int(gl_GlobalInvocationID.x) - 1;

	vec2 samplePosition = heightData[index].position.xz;
	heightData[index].position.w = SampleArrayWorld(samplePosition) * variables.terrainHeight;
}