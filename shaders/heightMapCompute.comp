#version 450

#extension GL_ARB_shading_language_include : require

layout(set = 1, binding = 0, r32f) uniform image2D heightMapTexture;

layout(set = 1, binding = 1) uniform HeightMapComputeVariables 
{
	float mapScale;
	vec2 mapOffset;
} heightMapComputeVariables;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

const uint resolution = 1024;
const float resolutionMult = 1.0 / float(resolution);

#include "noise.glsl"
#include "functions.glsl"

void main()
{
  	//imageStore(heightMapTexture, ivec2(gl_GlobalInvocationID.xy), vec4(float(gl_GlobalInvocationID.x + gl_GlobalInvocationID.y) / 1024.0, 0, 0, 0));

  	vec2 index = gl_GlobalInvocationID.xy;
  	vec2 uv = index * resolutionMult - 0.5 + heightMapComputeVariables.mapOffset;
  	//vec2 uv = index * resolutionMult;
  	//uv -= 0.5;
  	//uv += heightMapComputeVariables.mapOffset;
  	uv *= heightMapComputeVariables.mapScale;
	float noise = GenerateNoise(uv, 8, 0);
	//vec4 packedNoise = PackUnorm4x4(noise);
  	imageStore(heightMapTexture, ivec2(gl_GlobalInvocationID.xy), vec4(noise, 0.0, 0.0, 0.0));
  	//imageStore(heightMapTexture, ivec2(gl_GlobalInvocationID.xy), packedNoise);
}